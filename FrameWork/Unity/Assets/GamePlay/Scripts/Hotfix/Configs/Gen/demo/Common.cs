//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.demo
{ 

public sealed partial class Common :  Bright.Config.BeanBase 
{
    public Common(JSONNode _json) 
    {
        { if(!_json["hp_to_count"].IsNumber) { throw new SerializationException(); }  HpToCount = _json["hp_to_count"]; }
        { if(!_json["event_interval"].IsNumber) { throw new SerializationException(); }  EventInterval = _json["event_interval"]; }
        { if(!_json["num_maximum"].IsNumber) { throw new SerializationException(); }  NumMaximum = _json["num_maximum"]; }
        PostInit();
    }

    public Common(int hp_to_count, int event_interval, int num_maximum ) 
    {
        this.HpToCount = hp_to_count;
        this.EventInterval = event_interval;
        this.NumMaximum = num_maximum;
        PostInit();
    }

    public static Common DeserializeCommon(JSONNode _json)
    {
        return new demo.Common(_json);
    }

    /// <summary>
    /// HP与数量比例
    /// </summary>
    public int HpToCount { get; private set; }
    /// <summary>
    /// 事件间隔
    /// </summary>
    public int EventInterval { get; private set; }
    /// <summary>
    /// 士兵数量上限
    /// </summary>
    public int NumMaximum { get; private set; }

    public const int __ID__ = -1340610442;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "HpToCount:" + HpToCount + ","
        + "EventInterval:" + EventInterval + ","
        + "NumMaximum:" + NumMaximum + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
