//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.weapon
{ 

public sealed partial class Weapon :  Bright.Config.BeanBase 
{
    public Weapon(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["name"].IsString) { throw new SerializationException(); }  Name = _json["name"]; }
        { if(!_json["desc"].IsString) { throw new SerializationException(); }  Desc = _json["desc"]; }
        { if(!_json["price"].IsNumber) { throw new SerializationException(); }  Price = _json["price"]; }
        { if(!_json["quality"].IsNumber) { throw new SerializationException(); }  Quality = (weapon.EQuality)_json["quality"].AsInt; }
        PostInit();
    }

    public Weapon(int id, string name, string desc, int price, weapon.EQuality quality ) 
    {
        this.Id = id;
        this.Name = name;
        this.Desc = desc;
        this.Price = price;
        this.Quality = quality;
        PostInit();
    }

    public static Weapon DeserializeWeapon(JSONNode _json)
    {
        return new weapon.Weapon(_json);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 名字
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 描述
    /// </summary>
    public string Desc { get; private set; }
    /// <summary>
    /// 价格
    /// </summary>
    public int Price { get; private set; }
    /// <summary>
    /// 品质
    /// </summary>
    public weapon.EQuality Quality { get; private set; }

    public const int __ID__ = 986069582;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "Desc:" + Desc + ","
        + "Price:" + Price + ","
        + "Quality:" + Quality + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
